#!/bin/bash
line=12
dbvar=org.neo4j.server.database.location
db=.joernIndex
cfgfile=$NEO4J_HOME/conf/neo4j-server.properties

dbpath=/home/yangke/Program/Fabian-Yamaguchi/evdata


funcs0="yahoo_process_status,\
yahoo_process_p2p,\
got_sessionreq,\
purple_ntlm_parse_type2,\
msim_msg_get_binary_from_element,\
digest_md5_handle_challenge,\
jabber_scram_feed_parser,\
parse_server_step1,\
scram_handle_success,\
msn_oim_report_to_user,\
msn_switchboard_show_ink,\
scram_handle_challenge,\
jabber_data_create_from_xml,\
do_buddy_avatar_update_data,\
jabber_vcard_parse_avatar,\
jabber_ibb_parse,\
jabber_vcard_save_mine,\
jabber_vcard_parse"
funcs1="png_handle_sCAL,\
png_handle_sPLT,\
png_handle_tRNS,\
png_handle_bKGD,\
png_handle_pHYs,\
png_handle_oFFs,\
png_handle_tIME,\
png_handle_tEXt,\
png_handle_zTXt,\
png_handle_iTXt,\
png_handle_unknown,\
png_handle_IHDR,\
png_handle_PLTE,\
png_handle_IEND,\
png_handle_gAMA,\
png_handle_sBIT,\
png_handle_cHRM,\
png_handle_sRGB,\
png_handle_iCCP"
funcs2="TIFFFetchString,\
TIFFFetchSubjectDistance,\
TIFFFetchByteArray,\
TIFFFetchShortArray,\
TIFFFetchShortPair,\
TIFFFetchLongArray,\
TIFFFetchPerSampleShorts,\
TIFFFetchPerSampleLongs,\
TIFFFetchPerSampleAnys"
funcs3="PropertyOpForwarder,\
array_sort,\
array_splice,array_slice,\
array_indexOfHelper,\
array_extra,LookupGetterOrSetter,\
DefineGetterOrSetter,\
array_unshift,\
array_concat,\
array_join,\
array_push,\
js_Array"
funcs4="ext2_xattr_set_acl,\
ext3_xattr_set_acl,\
ext4_xattr_set_acl,\
jffs2_acl_setxattr,\
posix_acl_set,\
ocfs2_xattr_set_acl,\
btrfs_xattr_acl_set,\
generic_acl_set"

projnames=(pidgin libpng tiff firefox linux)
types=(callee parameter parameter parameter parameter)
symbols=(purple_base64_decode length dir argc dentry)

for ((i=0;i<5;i++))
do
	projname=${projnames[i]}
	type=${types[i]}
	symbol=${symbols[i]}
	dir=$dbpath/$projname
	
	eval arraystr="\${funcs${i}}"
	#echo $funcarray
	OLD_IFS="$IFS"
	IFS=","
	funcs=($arraystr)
	#IFS=”$OLD_IFS”
	for funcname in ${funcs[@]}
	do
		#if [ "$funcname" != "array_join" -a "$funcname" != "array_push" -a "$funcname" != "js_Array" ];then
		#if [ "$funcname" != "generic_acl_set" ];then
		#	continue
		#fi
    		dirname="$dbvar=$dir/$funcname/$db"
		sed "$line s/^/#/g" -i $cfgfile &&sed "$line i$dirname" -i $cfgfile
		neo4j restart
		rm -rf .chucky tfidf.fv
		out=neighbors
		outdir=$out/$projname
		if [ ! -d  $out ];then
			mkdir $out
		fi
		if [ ! -d  $outdir ];then
			mkdir $outdir
		fi
		outfile=$outdir/$funcname
		if [ ! -f $outfile ];then
			eval "time python chucky.py -i $type -n 25 $symbol -l ${funcname%-pds} |tee $outfile"
		fi
		#echo "$funcname" | grep -q "\-pds"  
		#if [ $? -eq 0 ]; then  
		#    	sed '/tif_dirread.c/d' -i
		#else
		#	sed '/tif_pdsdirread.c/d' -i
		#fi 
 	done
done


